---
# Source: service-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jackson-api
  labels:
    app: jackson
spec:
  selector:
    app: spring-boot-api # Deployment name tag
  ports:
  - name: http
    port: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: jackson-api
  labels:
    app: jackson
spec:
  host: jackson-api
  subsets:
  - name: stable
    labels:
      version: stable
  - name: canary
    labels:
      version: canary
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: jackson-api
spec:
    # https://istio.io/docs/reference/config/istio.networking.v1alpha3/#VirtualService
  gateways: # The default `mesh` value for when left blank is doesn't seem to propigate the rule properly. For now, always use a list of FQDN gateways
    - istio-autogenerated-k8s-ingress.istio-system.svc.cluster.local # must be FQDN if VirtualService in different NS than Gateway
  hosts:
    # Services in Kubernetes expose their endpoint using a common DNS pattern.
    # It looks like: <Service Name>.<Namespace Name>.svc.cluster.local
    # if not a FQDN then Istio assumes default namespace
    - jackson-api
  http:
  - route:
    - destination:
        host: jackson-api
        subset: stable
        port: 
          number: 8080
      weight: 90
    - destination:
        host: jackson-api
        subset: canary
        port: 
          number: 8080
      weight: 10
---
# Add routing rules for the existing Gateway included with Istio
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: jackson-route-rules
spec:
  # https://istio.io/docs/reference/config/istio.networking.v1alpha3/#VirtualService
  gateways: # The default `mesh` value for when left blank is doesn't seem to propigate the rule properly. For now, always use a list of FQDN gateways
    - istio-autogenerated-k8s-ingress.istio-system.svc.cluster.local # must be FQDN if VirtualService in different NS than Gateway
  hosts:
    - "*"
  http:
    - match:
        - uri:
            prefix: /api
      route:
        - destination:
            port:
              number: 8080
            host: jackson-api.default.svc.cluster.local
    - route: # This rule will pickup all other requests because it doesn't have a `match`
        - destination:
            port:
              number: 8080
            host: jackson-ui.default.svc.cluster.local
